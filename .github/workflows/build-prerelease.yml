name: Generate Prerelease

on:
  pull_request:
    types: [opened, reopened]
    branches:    
      - '**/alpha/**'
      - '**/beta'
      - '**/prerelease/**'

jobs:
  Publish-prerelease:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     dotnet-version: ['5.0.x', '6.0.x']

    env:
      PROJECT_PATH: ./Melo.Distancias/*.csproj
      PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
      NAME_BRANCH: ${{ github.head_ref }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Fetch all commits
        fetch-depth: 0
    
    # - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
    #   uses: actions/setup-dotnet@v2
    #   with:
    #     dotnet-version: ${{ matrix.dotnet-version }}

    - name: Setup .NET Core SDK 5
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '5.0.x'
    
    - name: Find specific branch patterns
      run: |
        import re
        import os
        github_head_ref = "${{ env.NAME_BRANCH }}"
        name_branch = github_head_ref.lower()
        x = re.findall("alpha|beta|prerelease", name_branch)
        env_file = os.getenv('GITHUB_ENV')
        with open(env_file, "a") as myfile:
          myfile.write("PRERELEASE=" + x[0])
      shell: python
    
    - name: Semantic versioning
      id: versioning
      uses: paulhatch/semantic-version@v4.0.2
      with:
        tag_prefix: ''
        major_pattern: "break:"
        minor_pattern: "feat:"
        patch_pattern: "fix:"
        format: "${major}.${minor}.${patch}-${{ env.PRERELEASE }}${increment}"


    - name: Build Project and Generate Package
      run: dotnet build ${{ env.PROJECT_PATH }} -c Release -p:PackageVersion=${{ steps.versioning.outputs.version }} -o ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

    - name: Push Package on NuGet
      run: dotnet nuget push '${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_SERVER }} --skip-duplicate

    - name: Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: ${{ steps.versioning.outputs.version }}
        automatic_release_tag: ${{ steps.versioning.outputs.version }}
        prerelease: true