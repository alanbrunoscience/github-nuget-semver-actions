name: Generate Release

on:
  push:
    branches:
      - master

jobs:
  Publish-release:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     dotnet-version: ["5.0.x", "6.0.x"]

    env:
      PROJECT_PATH: ./Melo.Distancias/*.csproj
      PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fetch all commits
          fetch-depth: 0

      # - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      #   uses: actions/setup-dotnet@v2
      #   with:
      #     dotnet-version: ${{ matrix.dotnet-version }}

      - name: Setup .NET Core SDK 5
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '5.0.x'

      - name: Semantic versioning
        id: versioning
        uses: paulhatch/semantic-version@v4.0.2
        with:
          branch: master
          tag_prefix: ''
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          patch_pattern: "fix:"
          format: "${major}.${minor}.${patch}"

      - name: Build Project and Generate Package
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release -p:PackageVersion=${{ steps.versioning.outputs.version }} -o ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Push Package on NuGet
        run: dotnet nuget push '${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_SERVER }} --skip-duplicate

      - name: Create Release
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: ${{ steps.versioning.outputs.version }}
          automatic_release_tag: ${{ steps.versioning.outputs.version }}
          prerelease: false
